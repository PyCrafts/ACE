[vxstream]
; the base URI for all vxstream requests (should be your local vxstream installation)
baseuri = OVERRIDE
baseuri_v2 = OVERRIDE
; the environment to submit all samples into
environmentid = OVERRIDE
; authentication stuff
apikey = OVERRIDE
secret = OVERRIDE
; the baseuri to use from the GUI
gui_baseuri = OVERRIDE
; use proxies
use_proxy = no

[analysis_module_vxstream_file_analyzer]
module = saq.modules.vx
class = VxStreamFileAnalyzer
enabled = no

; the total amount of time (in minutes) before we time out a vxstream submission
timeout = 20
; the amount of time between status checks (in seconds)
frequency = 10
; set this to true to use the proxy configured in [proxy]
use_proxy = no

; comma separated list of supported file extensions
; there is also support for checking for things like MZ, OLE and PDF headers built into the module
supported_extensions = doc,docx,docm,xls,xlsx,xlsm,ppt,pptx,pptm,pdf,js,vbs,jse,exe,dll,swf,jar,lnk,ps1,rtf,chm,bat,scr,hta,cab,pif,au3,a3x,eps,xla,pptm,pps,dot,dotm,pub,wsf,cmd,ps,vbe,wsc

; thresholds for generating alerts
; samples with a "score" of this or higher will alert
threat_score_threshold = 100
; sampels with a "threat level" of this or higher will alert
threat_level_threshold = 2

; set to yes to enable downloading memory dumps
download_memory_dumps = no

; (relative) path to configuration file that contains regular expressions of path to avoid
; when processing dropped files
dropped_files_regex_config = etc/vx_dropped.regex

[analysis_module_vxstream_hash_analyzer]
module = saq.modules.vx
class = VxStreamHashAnalyzer
enabled = no

; the total amount of time (in minutes) before we time out a vxstream submission
timeout = 20
; the amount of time between status checks (in seconds)
frequency = 10
; set this to true to use the proxy configured in [proxy]
use_proxy = no

; thresholds for generating alerts
; samples with a "score" of this or higher will alert
threat_score_threshold = 100
; sampels with a "threat level" of this or higher will alert
threat_level_threshold = 2

; set to yes to enable downloading memory dumps
download_memory_dumps = no

; (relative) path to configuration file that contains regular expressions of path to avoid
; when processing dropped files
dropped_files_regex_config = etc/vx_dropped.regex

[analysis_module_falcon_file_analyzer]
module = saq.modules.vx
class = FalconFileAnalyzer
enabled = no

; the total amount of time (in minutes) before we time out a vxstream submission
timeout = 20
; the amount of time between status checks (in seconds)
frequency = 10
; set this to true to use the proxy configured in [proxy]
use_proxy = no

; comma separated list of supported file extensions
; there is also support for checking for things like MZ, OLE and PDF headers built into the module
supported_extensions = doc,docx,docm,xls,xlsx,xlsm,ppt,pptx,pptm,pdf,js,vbs,jse,exe,dll,swf,jar,lnk,ps1,rtf,chm,bat,scr,hta,cab,pif,au3,a3x,eps,xla,pptm,pps,dot,dotm,pub,wsf,cmd,ps,vbe,wsc

; thresholds for generating alerts
; samples with a "score" of this or higher will alert
threat_score_threshold = 100
; sampels with a "threat level" of this or higher will alert
threat_level_threshold = 2

; set to yes to enable downloading memory dumps
download_memory_dumps = no

; (relative) path to configuration file that contains regular expressions of path to avoid
; when processing dropped files
dropped_files_regex_config = etc/vx_dropped.regex

; This module works for md5, sha1, sha256
[analysis_module_falcon_hash_analyzer]
module = saq.modules.vx
class = FalconHashAnalyzer
enabled = no

; the total amount of time (in minutes) before we time out a vxstream submission
timeout = 20
; the amount of time between status checks (in seconds)
frequency = 10
; set this to true to use the proxy configured in [proxy]
use_proxy = no

; thresholds for generating alerts
; samples with a "score" of this or higher will alert
threat_score_threshold = 100
; sampels with a "threat level" of this or higher will alert
threat_level_threshold = 2

; set to yes to enable downloading memory dumps
download_memory_dumps = no

; (relative) path to configuration file that contains regular expressions of path to avoid
; when processing dropped files
dropped_files_regex_config = etc/vx_dropped.regex

# DEPRECATED
[analysis_module_vxstream_v1_0]
module = saq.modules.vx
class = VxStreamAnalyzer_v1_0
enabled = no
expect_proxy = 

; the total amount of time (in minutes) before we time out a vxstream submission
timeout = 20
; the amount of time between status checks (in seconds)
frequency = 10
; set this to true to use the proxy configured in [proxy]
use_proxy = yes

; comma separated list of supported file extensions
; there is also support for checking for things like MZ, OLE and PDF headers built into the module
supported_extensions = doc,docx,docm,xls,xlsx,xlsm,ppt,pptx,pptm,pdf,js,vbs,jse,exe,dll,swf,jar,lnk,ps1,rtf,chm,bat,scr,hta,cab,pif,au3,a3x,eps,xla,pptm,pps,dot,dotm,pub,wsf,cmd,ps,vbe,wsc

; thresholds for generating alerts
; samples with a "score" of this or higher will alert
threat_score_threshold = 100
; sampels with a "threat level" of this or higher will alert
threat_level_threshold = 2

[module_group_file]
analysis_module_vxstream_file_analyzer = yes
analysis_module_vxstream_hash_analyzer = yes
analysis_module_falcon_file_analyzer = yes
analysis_module_falcon_hash_analyzer = yes
